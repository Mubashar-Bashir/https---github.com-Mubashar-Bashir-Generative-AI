

name: mobi-ai-mart

services:
  # Service 01 user_service_api
  user-svc-aimart-api:
    build:
      context: ./user-service-aimart
      dockerfile: Dockerfile.dev
    container_name: useraimart_cont
    volumes:
      - ./user-service-aimart:/code
    depends_on:
      - user-aimart-db
    ports:
      - "8006:8006"

  # Service 02 product_service_api
  prod-svc-aimart-api:
    build:
      context: ./product-service-aimart
      dockerfile: Dockerfile.dev
    container_name: prod-svc-APIcont
    volumes:
      - ./product-service-aimart:/code
    depends_on:
      - broker
      - prod-svc-db
    ports:
      - "8007:8007"

  # Service 03 payment_svc_api
  # payment-svc-api:
  #   build:
  #     context: ./payment-service-aimart
  #     dockerfile: Dockerfile.dev
  #   container_name: payment-svc-cont
  #   volumes:
  #     - ./payment-service-aimart:/code
  #   depends_on:
  #     - payment-svc-db
  #   ports:
  #     - "8008:8008"

  # Service 04 order_service_api
  order-svc-api:
    build:
      context: ./order-service-aimart
      dockerfile: Dockerfile.dev
    container_name: order-svc-APIcont
    volumes:
      - ./order-service-aimart:/code
    depends_on:
      - order-svc-db
    ports:
      - "8009:8009"

  # Service 05 notification_service_api
  # notification-svc-api:
  #   build:
  #     context: ./notification-service-aimart
  #     dockerfile: Dockerfile.dev
  #   container_name: notification-svc-cont
  #   volumes:
  #     - ./notification-service-aimart:/code
  #   depends_on:
  #     - notification-svc-db
  #   ports:
  #     - "8010:8010"

  # Service 06 inventory_service_api
  inventory-svc-api:
    build:
      context: ./inventory-service-aimart
      dockerfile: Dockerfile.dev
    container_name: inventory-svc-APIcont
    volumes:
      - ./inventory-service-aimart:/code
    depends_on:
      - broker
      - inventory-svc-db
    ports:
      - "8011:8011"

  ######################################## Database services ###################################
  # Service 07 db for user_service
  user-aimart-db:
    image: postgres:latest
    restart: always
    container_name: user-aimart_db_Cont
    environment:
      - POSTGRES_USER=mobi
      - POSTGRES_PASSWORD=my_password
      - POSTGRES_DB=user-aimart-db
    ports:
      - '5406:5432'
    volumes:
      - user-aimart-db:/var/lib/postgresql/data

  # Service 08 db for product_service
  prod-svc-db:
    image: postgres:latest
    restart: always
    container_name: prod-svc-DBcont
    environment:
      - POSTGRES_USER=mobi
      - POSTGRES_PASSWORD=my_password
      - POSTGRES_DB=prod-svc-db
    ports:
      - '5407:5432'
    volumes:
      - prod-svc-db:/var/lib/postgresql/data

  # Service 09 db for payment_service
  # payment-svc-db:
  #   image: postgres:latest
  #   restart: always
  #   container_name: payment-svc-db-Cont
  #   environment:
  #     - POSTGRES_USER=mobi
  #     - POSTGRES_PASSWORD=my_password
  #     - POSTGRES_DB=payment-svc-db
  #   ports:
  #     - '5408:5432'
  #   volumes:
  #     - payment-svc-db:/var/lib/postgresql/data

  # Service 10 db for order_service
  order-svc-db:
    image: postgres:latest
    restart: always
    container_name: order-svc-db-Cont
    environment:
      - POSTGRES_USER=mobi
      - POSTGRES_PASSWORD=my_password
      - POSTGRES_DB=order-svc-db
    ports:
      - '5432:5432'
    volumes:
      - order-svc-db:/var/lib/postgresql/data

  # Service 11 db for notification_service
  # notification-svc-db:
  #   image: postgres:latest
  #   restart: always
  #   container_name: notification-svc-db-Cont
  #   environment:
  #     - POSTGRES_USER=mobi
  #     - POSTGRES_PASSWORD=my_password
  #     - POSTGRES_DB=notification-svc-db
  #   ports:
  #     - '5410:5432'
  #   volumes:
  #     - notification-svc-db:/var/lib/postgresql/data

  # Service 12 db for inventory_service
  inventory-svc-db:
    image: postgres:latest
    restart: always
    container_name: inventory-svc-DBCont
    environment:
      - POSTGRES_USER=mobi
      - POSTGRES_PASSWORD=my_password
      - POSTGRES_DB=inventory-svc-db
    ports:
      - '5411:5432'
    volumes:
      - inventory-svc-db:/var/lib/postgresql/data

  # Service 13 broker for apache kafka
  broker:
    image: apache/kafka:3.7.0
    hostname: ai_mart_broker
    container_name: ai_mart_broker
    ports:
      - '9092:9092'
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://localhost:9092,PLAINTEXT://ai_mart_broker:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@ai_mart_broker:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'

  # Service 14 kafka-ui
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui-aimart-cont
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: 'Local Kafka Cluster'
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'ai_mart_broker:19092'
      DYNAMIC_CONFIG_ENABLED: "true"
    depends_on:
      - broker

################################################ Volumes ###################################################
volumes:
  # Volume 01 for user db
  user-aimart-db:
    driver: local

  # Volume 02 for product db
  prod-svc-db:
    driver: local

  # Volume 03 for payment db
  # payment-svc-db:
  #   driver: local

  # Volume 04 for order db
  order-svc-db:
    driver: local

  # Volume 05 for notification db
  # notification-svc-db:
  #   driver: local

  # Volume 06 for inventory db
  inventory-svc-db:
    driver: local

networks:
  default:
    driver: bridge
